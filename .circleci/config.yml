version: 2
jobs:
    build:
        docker:
            - image: circleci/node:10.5.0

        working_directory: ~/repo

        steps:
            - checkout
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "server/package.json" }}
                    - v1-dependencies-{{ checksum "client/package.json" }}
                    - v1-dependencies-

            # install dependencies for server
            - run: cd server; npm install
            # install dependencies for client
            - run: cd client; npm install

            - save_cache:
                paths:
                    - node_modules
                    - client/node_modules
                key: v1-dependencies-{{ checksum "server/package.json" }}
                key: v1-dependencies-{{ checksum "client/package.json" }}

            # build server (just apidoc) & reinstall modules (just production)
            - run: cd server; npm run apidoc:public
            # run server api tests
            - run: cd server; npm run test
            - store_test_results:
                path: server/reports

            - run: cd server; rm -rf node_modules
            - run: cd server; npm install --production
            # build client (angular build)
            - run: cd client; npm run build
            - run: cd client; npm run lint

            # docker build
            - setup_remote_docker:
                docker_layer_caching: true
            - run: |
                VERSION=$(node -p -e "require('./server/package.json').version")
                # pack application
                rm -rf server/public; mv ./client/dist ./server/public
                cd server && tar -czf ../stjorna-$VERSION.tar.gz *
                docker login -u ${DOCKER_USER} -p ${DOCKER_PASS} docker.io
                cd ../ && docker build --pull --build-arg VERSION=$VERSION -t docker.io/secanis/stjorna:$VERSION -t docker.io/secanis/stjorna:latest .
                # docker build: if RELEASE then push it
                if [ -n "$RELEASE" ]; then 
                    docker push docker.io/secanis/stjorna:$VERSION
                    docker push docker.io/secanis/stjorna:latest
                else
                    echo "no docker build, because RELEASE was not set."
                fi
